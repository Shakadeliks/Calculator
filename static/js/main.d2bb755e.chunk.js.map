{"version":3,"sources":["App.js","index.js","Calculator.js"],"names":["App","className","Helmet","charSet","rel","href","Calculator","ReactDOM","render","StrictMode","document","getElementById","useState","data","setData","calcBtns","forEach","item","push","onClick","e","target","value","substr","length","String","eval","includes","toFixed","console","log"],"mappings":"sMAeeA,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,+CACA,sBAAMC,IAAI,YAAYC,KAAK,iDAE7B,cAACC,EAAA,EAAD,QCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,moBCN1B,SAASL,aAEL,cAA0BM,oDAAS,IAAnC,gOAAQC,KAAR,cAAcC,QAAd,cAEMC,SAAW,GAajB,MAZA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,IAAK,KAAKC,SAAS,SAAAC,GACrCF,SAASG,KACL,qEAAQC,QAAU,SAAAC,GACdN,QAAQD,KAAOO,EAAEC,OAAOC,QAE5BA,MAAQL,EAHR,SAKIA,GADGA,OAOX,mEAAKhB,UAAU,UAAf,UAEI,kEAAKA,UAAU,aAAf,SACMY,OAEN,kEAAKZ,UAAU,cAAf,SACMc,WAGN,mEAAKd,UAAU,oBAAf,UACI,qEAAQkB,QAAU,kBAAML,QAAQD,KAAKU,OAAO,EAAGV,KAAKW,OAAS,KAA7D,mBAKA,qEAAQL,QAAU,kBAAML,QAAQ,KAAhC,mBAKJ,mEAAKb,UAAU,qBAAf,UACI,qEAAQkB,QAAU,SAAAC,GAAC,OAAIN,QAAQD,KAAOO,EAAEC,OAAOC,QAAQA,MAAM,IAA7D,eAIA,qEAAQH,QAAU,SAAAC,GAAC,OAAIN,QAAQD,KAAOO,EAAEC,OAAOC,QAAQA,MAAM,IAA7D,eAIA,qEAAQH,QAAU,SAAAC,GAAC,OAAIN,QAAQD,KAAOO,EAAEC,OAAOC,QAAQA,MAAM,IAA7D,eAIA,qEAAQH,QAAU,SAAAC,GAAC,OAAIN,QAAQD,KAAOO,EAAEC,OAAOC,QAAQA,MAAM,IAA7D,eAIA,qEAAQH,QAAU,iBAACC,GACf,IACIN,QACIW,OAAOC,KAAKb,OAAOW,OAAS,GACxBC,OAAOC,KAAKb,OAAOc,SAAS,KACtBF,OAAOC,KAAKb,MAAMe,QAAQ,IAC1BH,OAAOC,KAAKb,QAE5B,MAAQO,GACNS,QAAQC,IAAKV,KAGrBE,MAAM,IAZN,qBAsBDhB,mC","file":"static/js/main.d2bb755e.chunk.js","sourcesContent":["import Calculator from './Calculator';\nimport { Helmet } from \"react-helmet\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Calculator</title>\n        <link rel=\"canonical\" href=\"https://shakadeliks.github.io/Calculator/\" />\n      </Helmet>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction Calculator() {\r\n    {/* set the state of the data that will be calculated */}\r\n    const [ data, setData ] = useState('');\r\n    {/* create an array of buttons from each number on calc, e object will determine which number is pressed and will add it to the calculation */}\r\n    const calcBtns = [];\r\n    [9,8,7,6,5,4,3,2,1,0, '.', '%'].forEach( item => {\r\n        calcBtns.push(\r\n            <button onClick={ e => {\r\n                setData(data + e.target.value)\r\n            }}\r\n            value={ item }\r\n            key= { item }>\r\n              { item }      \r\n            </button>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            \r\n            <div className='show-input'>\r\n                { data }\r\n            </div>\r\n            <div className='digits flex'>\r\n                { calcBtns }\r\n            </div>\r\n            {/* clear button which erases on character at a time when pressed*/}\r\n            <div className='modifiers subgrid'>\r\n                <button onClick={ () => setData(data.substr(0, data.length - 1))}>\r\n                    Clear\r\n                </button>\r\n\r\n            {/* AC button clears the entire field of characters*/}\r\n                <button onClick={ () => setData('')}>\r\n                    AC\r\n                </button>\r\n            </div>\r\n            {/* each button for the operators */}\r\n            <div className='operations subgrid'>\r\n                <button onClick={ e => setData(data + e.target.value)} value='+'>\r\n                    +\r\n                </button>\r\n\r\n                <button onClick={ e => setData(data + e.target.value)} value='-'>\r\n                    -\r\n                </button>\r\n\r\n                <button onClick={ e => setData(data + e.target.value)} value='*'>\r\n                    *\r\n                </button>\r\n\r\n                <button onClick={ e => setData(data + e.target.value)} value='/'>\r\n                    /\r\n                </button>\r\n                {/* \"=\" btn */}\r\n                <button onClick={ (e) => {\r\n                    try {\r\n                        setData(\r\n                            String(eval(data)).length > 3 &&\r\n                                String(eval(data)).includes('.')\r\n                                    ? String(eval(data).toFixed(4))\r\n                                    : String(eval(data))\r\n                        );\r\n                    } catch ( e ) {\r\n                        console.log( e )\r\n                    }    \r\n                }} \r\n                value='='\r\n                >\r\n                    =\r\n                </button>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Calculator;"],"sourceRoot":""}